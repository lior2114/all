import random
empty = set()
for i in range (1000000):
    n = random.randint(1,100)
    empty.add(n)
print(sum(empty))
#זה מראה דווקא את הסכום 5050 כי לא יכולים להיות כפילויות בסט אז הוא מוחק את מה שבכפילות


print ("=============set====================")
# סט (Set) וליסט (List) הם שני מבני נתונים שונים בפייתון, ולכל אחד מהם יש תכונות ושימושים שונים.
# סט (Set)
# סט הוא אוסף לא מסודר של איברים ייחודיים. כלומר, כל איבר בסט מופיע פעם אחת בלבד, ואין חשיבות לסדר האיברים.
#  סטים שימושיים כאשר רוצים לשמור אוסף של איברים ללא כפילויות ולבצע פעולות מתמטיות כמו איחוד, חיתוך והפרש.
# דוגמה לשימוש בסט:
# יצירת סט
my_set = {1, 2, 3, 4, 5}

# הוספת איבר לסט
my_set.add(6)

# בדיקה אם איבר נמצא בסט
print(3 in my_set)  # True

# הסרת איבר מהסט
my_set.remove(4)

# איחוד של שני סטים
another_set = {4, 5, 6, 7}
union_set = my_set.union(another_set)
print(union_set)  # {1, 2, 3, 4, 5, 6, 7}


print ("=============list====================")
# ליסט (List)
# ליסט הוא אוסף מסודר של איברים, שיכול לכלול כפילויות. כל איבר בליסט נמצא במיקום מסוים (אינדקס), והסדר חשוב. 
# ליסטים שימושיים כאשר רוצים לשמור אוסף של איברים בסדר מסוים ולבצע פעולות כמו הוספה, הסרה וגישה לאיברים לפי אינדקס.

# דוגמה לשימוש בליסט:
# יצירת ליסט
my_list = [1, 2, 3, 4, 5]

# הוספת איבר לליסט
my_list.append(6)

# גישה לאיבר לפי אינדקס
print(my_list[2])  # 3

# הסרת איבר מהליסט
my_list.remove(4)

# מיון הליסט
my_list.sort()
print(my_list)  # [1, 2, 3, 5, 6]


# סיכום ההבדלים:
# סט: אוסף לא מסודר של איברים ייחודיים, אין חשיבות לסדר.
# ליסט: אוסף מסודר של איברים, יכול לכלול כפילויות, הסדר חשוב.
# שני מבני הנתונים הללו שימושיים במצבים שונים, בהתאם לצרכים של התוכנית.

